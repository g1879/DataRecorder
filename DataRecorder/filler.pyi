# -*- coding:utf-8 -*-
from pathlib import Path
from typing import Union, List, Any, Tuple, Optional

from .base import BaseRecorder
from .cell_style import CellStyle
from .setter import FillerSetter


class Filler(BaseRecorder):

    def __init__(self,
                 path: Optional[str, Path] = None,
                 cache_size: int = None,
                 key_cols: Union[str, int, list, tuple, bool] = True,
                 begin_row: int = 2,
                 sign_col: Union[str, int, bool] = True,
                 data_col: Optional[int, str] = None,
                 sign: Any = None,
                 deny_sign: bool = False) -> None:
        self._set: FillerSetter = ...
        self._key_cols: Union[List[int], bool] = ...
        self._begin_row: Union[str, int] = ...
        self._sign_col: Optional[int, bool] = ...
        self._data_col: int = ...
        self._sign: Any = ...
        self._deny_sign: bool = ...
        self._link_style: CellStyle = ...
        self._quote_char: str = ...
        self._delimiter: str = ...

    @property
    def sign(self) -> str: ...

    @property
    def deny_sign(self) -> bool: ...

    @property
    def key_cols(self) -> Union[List[int], bool]: ...

    @property
    def sign_col(self) -> Optional[int, bool]: ...

    @property
    def data_col(self) -> int: ...

    @property
    def begin_row(self) -> Union[str, int]: ...

    @property
    def keys(self) -> list: ...

    @property
    def set(self) -> FillerSetter: ...

    @property
    def delimiter(self) -> str: ...

    @property
    def quote_char(self) -> str: ...

    def add_data(self, data: Any,
                 coord: Union[list, Tuple[Optional[int, str], Union[int, str]], str, int] = 'newline') -> None: ...

    def set_link(self,
                 coord: Union[int, str, tuple, list],
                 link: str,
                 content: Optional[int, str, float] = None) -> None: ...

    def set_style(self, coord: Union[int, str, tuple, list], style: CellStyle, replace: bool = True) -> None: ...

    def _record(self) -> None: ...

    def _to_xlsx(self) -> None: ...

    def _to_csv(self) -> None: ...
